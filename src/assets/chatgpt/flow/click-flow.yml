name: ClickPrompt Workflow
category: Development
author: Phodal Huang
description: ClickPrompt GitHub Workflow for development ClickFlow
explain: |
  digraph G {
    0[flowType = "prompt"]
    1[flowType = "interactive"]
    2[flowType = "interactive"]
    3[flowType = "interactive"]
    4[flowType = "interactive"]
    5[flowType = "interactive"]
    0 -> 1
    1 -> 2
    2 -> 3
    3 -> 4
    4 -> 5
  }

stepGuide: false

steps:
  - name: 上下文准备
    ask: |
      我们是 ClickPrompt 开源项目的贡献者，在对话继续之前请阅读一下这些资料：

      - ClickPrompt 是一款专为 Prompt 编写者设计的工具，它支持多种基于 Prompt 的 AI 应用，例如 Stable Diffusion、ChatGPT 和 GitHub Copilot 等。 使用 ClickPrompt，您可以轻松地查看、分享和一键运行这些模型，同时提供在线的 Prompt 生成器，使用户能够根据自己的需求轻松创建符合要求的 Prompt，并与其他人分享。
      - ClickPrompt 包含了些页面组件：chatgpt、chatgpt-general、chatgpt-generator-cot、chatgpt-interactive-game、chatgpt-prompt-role-play、chatgpt-samples、click-flow、github-copilot-samples、resources、stable-diffusion-examples、stable-diffusion-generator
      - ClickPrompt 使用 Next.js、React、Chakra UI、Tailwind 等作为主要的开发框架，使用 Planetscale 作为数据库。

      阅读完毕后，请回复 OK。
  - name: 分析问题
    ask: |
      在 ClickPrompt 上，有一个用户反馈了一个问题，帮我分析一下他的问题原因可能是什么？

      $$issue$$
    preActions:
      - name: Fetch issue
        type: "api"
        api:
          url: https://api.github.com/repos/prompt-engineering/chat-flow/issues
          method: GET
          headers:
            - key: Accept
              value: application/vnd.github+json
            - key: Authorization
              value: Bearer ${{ GITHUB_TOKEN }}
        postProcess:
          - function: "jsonPath"
            args:
              - "$.0.body"
            outputVar: "issues"
        postComponents:
          - name: "JsonViewer"
            args: "issues"
    values:
      issue: "$$issue$$"
  - name: 创建需求
    ask: |
      我们想在 ClickPrompt 上添加一个新的需求： $$placeholder$$，请帮我写一个需求的 issue。

      要求：输出需求的格式如下：

      """
      **Is your feature request related to a problem? Please describe.**

      No

      **Describe the solution you'd like**

      A clear and concise description of what you want to happen.

      **Describe alternatives you've considered**

      A clear and concise description of any alternative solutions or features you've considered.

      **Additional context**

      Add any other context or screenshots about the feature request here.
      """

      请按照格式输出需求。
    markdownEditor: true
    cachedResponseRegex:
    values:
      placeholder: 在 ClickPrompt 上使用 ChatGPT 自动创建 GitHub issue，以便于社区贡献者能更好的理解这个需求
    postActions:
      - name: Create issue
        type: "api"
        api:
          url: https://api.github.com/repos/prompt-engineering/chat-flow/issues
          method: POST
          headers:
            - key: Accept
              value: application/vnd.github+json
            - key: Authorization
              value: Bearer ${{ GITHUB_TOKEN }}
          body:
            title: Add ChatGPT for ClickPrompt
            body: $$response$$
            assignees: []
            milestone: null
            labels: []
  - name: 初步代码生成
    ask: |
      我要使用 $$placeholder$$，帮我生成代码吧。
    markdownEditor: true
    values:
      placeholder: node-fetch 结合 GitHub issue 来自动化创建 issue
  - name: CodeReview
    ask: |
      作为 Pull Request 的代码审查者，需对下列代码变更提供反馈。提供的变更以补丁形式呈现，每个补丁条目包含提交信息（Subject line）和以 unidiff 格式显示的代码变更（diffs）。

      要求：

      - 审查补丁中的代码变更（diffs）并提供反馈。
      - 如果有任何错误，请指出。
      - 代码是否按照提交信息中所述执行？
      - 不要强调小问题和琐碎问题。
      - 如果有多个评论，请使用项目符号。

      要审查的 Pull Request 补丁如下：

      $$patch$$
    markdownEditor: true
    values:
      patch: |
        ```git
        From 90d3e91b35cf503c1bda1695051101904db29e54 Mon Sep 17 00:00:00 2001
        From: CGQAQ <m.jason.liu@outlook.com>
        Date: Mon, 13 Mar 2023 17:15:42 +0800
        Subject: [PATCH] feat: Clear conversations

        ---
        src/storage/planetscale.ts            | 10 ++++++++++
        1 files changed, 10 insertions(+), 0 deletion(-)

        --- a/src/storage/planetscale.ts
          +++ b/src/storage/planetscale.ts
          @@ -122,6 +122,16 @@ export const deleteConversation = cache(async (conversationId: number) => {
               .execute();
        });

        +export const deleteAllConversationsByUserId = cache(async (userId: number) => {
        +  return queryBuilder
        +    .updateTable("conversations")
        +    .set({
           +      deleted: 1,
        +    })
        +    .where("conversations.user_id", "=", userId)
        +    .execute();
        +});
        +
           export const getUserByKeyHashed = cache(async (keyHashed: string) => {
             const result = await queryBuilder
             .selectFrom("users")
        --
        2.39.2
        ```
    cachedResponseRegex:
  - name: 线上问题分析
    ask: |
      帮我分析一下这个问题的原因是什么？

      $$placeholder$$
    markdownEditor: true
    values:
      placeholder: |
        ```bash
        DatabaseError: target: chat-flow.-.primary: vttablet: rpc error: code = InvalidArgument desc = Data too long for column 'key_encrypted' at row 1 (errno 1406) (sqlstate 22001) (CallerID: 2lu2zsztxccwigrmdi7w): Sql: "insert into users(iv, key_hashed, key_encrypted) values (:vtg1, :vtg2, :vtg3)", BindVars: {REDACTED}
            at Connection.execute (/var/task/.next/server/chunks/9212.js:182:19)
            at processTicksAndRejections (node:internal/process/task_queues:96:5)
            at async _PlanetScaleConnection.executeQuery (/var/task/.next/server/chunks/9212.js:408:21)
            at async /var/task/node_modules/kysely/dist/cjs/query-executor/query-executor-base.js:37:28
            at async DefaultConnectionProvider.provideConnection (/var/task/node_modules/kysely/dist/cjs/driver/default-connection-provider.js:12:20)
            at async DefaultQueryExecutor.executeQuery (/var/task/node_modules/kysely/dist/cjs/query-executor/query-executor-base.js:36:16)
            at async InsertQueryBuilder.execute (/var/task/node_modules/kysely/dist/cjs/query-builder/insert-query-builder.js:486:24)
            at async handler (/var/task/.next/server/chunks/1407.js:70:21)
            at async Object.apiResolver (/var/task/node_modules/next/dist/server/api-utils/node.js:372:9)
            at async NextNodeServer.runApi (/var/task/node_modules/next/dist/server/next-server.js:513:9) {
          status: 400,
          body: {
            message: `target: chat-flow.-.primary: vttablet: rpc error: code = InvalidArgument desc = Data too long for column 'key_encrypted' at row 1 (errno 1406) (sqlstate 22001) (CallerID: 2lu2zsztxccwigrmdi7w): Sql: "insert into users(iv, key_hashed, key_encrypted) values (:vtg1, :vtg2, :vtg3)", BindVars: {REDACTED}`,
            code: 'UNKNOWN'
          }
        }
        RequestId: d344e3fe-f438-4126-8017-f83e7104d07a Error: Runtime exited with error: exit status 1
        Runtime.ExitError
        ```
